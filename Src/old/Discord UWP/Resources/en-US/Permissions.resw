<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADD_REACTIONS" xml:space="preserve">
    <value>Add reactions</value>
    <comment>Allows for the addition of reactions to messages</comment>
  </data>
  <data name="ADMINISTRATOR" xml:space="preserve">
    <value>Administrator</value>
    <comment>Allows all permissions and bypasses channel permission overwrites</comment>
  </data>
  <data name="ATTACH_FILES" xml:space="preserve">
    <value>Attach files</value>
    <comment>Allows for uploading images and files</comment>
  </data>
  <data name="BAN_MEMBERS" xml:space="preserve">
    <value>Ban members</value>
    <comment>Allow banning members</comment>
  </data>
  <data name="CHANGE_NICKNAME" xml:space="preserve">
    <value>Change nickname</value>
    <comment>Allows for modification of own nickname</comment>
  </data>
  <data name="CONNECT" xml:space="preserve">
    <value>Connect</value>
    <comment>Allows for joining a voice channel</comment>
  </data>
  <data name="CREATE_INSTANT_INVITE" xml:space="preserve">
    <value>Create instant invite</value>
    <comment>Allows creation of instant invites</comment>
  </data>
  <data name="DEAFEN_MEMBERS" xml:space="preserve">
    <value>Deafen members</value>
    <comment>Allows for deafening of members in a voice channel</comment>
  </data>
  <data name="EMBED_LINKS" xml:space="preserve">
    <value>Embed links</value>
    <comment>Links sent by users with this permission will be auto-embedded</comment>
  </data>
  <data name="KICK_MEMBERS" xml:space="preserve">
    <value>Kick members</value>
    <comment>Allow kicking members</comment>
  </data>
  <data name="MANAGE_CHANNELS" xml:space="preserve">
    <value>Manage channels</value>
    <comment>Allows management and editing of channels</comment>
  </data>
  <data name="MANAGE_EMOJIS" xml:space="preserve">
    <value>Manage emojis</value>
    <comment>Allows management and editing of emojis</comment>
  </data>
  <data name="MANAGE_GUILD" xml:space="preserve">
    <value>Manage server</value>
    <comment>Allows management and editing of the guild</comment>
  </data>
  <data name="MANAGE_MESSAGES" xml:space="preserve">
    <value>Manage messages</value>
    <comment>Allows for deletion of other users messages</comment>
  </data>
  <data name="MANAGE_NICKNAMES" xml:space="preserve">
    <value>Manage nicknames</value>
    <comment>Allows for modification of other users nicknames</comment>
  </data>
  <data name="MANAGE_ROLES" xml:space="preserve">
    <value>Manage roles</value>
    <comment>Allows management and editing of roles</comment>
  </data>
  <data name="MANAGE_WEBHOOKS" xml:space="preserve">
    <value>Manage webhooks</value>
    <comment>Allows management and editing of webhooks</comment>
  </data>
  <data name="MENTION_EVERYONE" xml:space="preserve">
    <value>Mention everyone</value>
    <comment>Allows for using the @everyone tag to notify all users in a channel, and the @here tag to notify all online users in a channel</comment>
  </data>
  <data name="MOVE_MEMBERS" xml:space="preserve">
    <value>Move members</value>
    <comment>Allows for moving of members between voice channels</comment>
  </data>
  <data name="MUTE_MEMBERS" xml:space="preserve">
    <value>Mute members</value>
    <comment>Allows for muting members in a voice channel</comment>
  </data>
  <data name="PRIORITY_SPEAKER" xml:space="preserve">
    <value>Priority speaker</value>
    <comment>Allows for using priority speaker in a voice channel</comment>
  </data>
  <data name="READ_MESSAGE_HISTORY" xml:space="preserve">
    <value>Read message history</value>
    <comment>Allows for reading of message history</comment>
  </data>
  <data name="SEND_MESSAGES" xml:space="preserve">
    <value>Send messages</value>
    <comment>Allows for sending messages in a channel</comment>
  </data>
  <data name="SEND_TTS_MESSAGES" xml:space="preserve">
    <value>Send TTS messages</value>
    <comment>Allows for sending of /tts messages</comment>
  </data>
  <data name="SPEAK" xml:space="preserve">
    <value>Speak</value>
    <comment>Allows for speaking in a voice channel</comment>
  </data>
  <data name="USE_EXTERNAL_EMOJIS" xml:space="preserve">
    <value>Use external emojis</value>
    <comment>Allows the usage of custom emojis from other servers</comment>
  </data>
  <data name="USE_VAD" xml:space="preserve">
    <value>Use Voice-Activity detection</value>
    <comment>Allows for using voice-activity-detection in a voice channel</comment>
  </data>
  <data name="VIEW_AUDIT_LOG" xml:space="preserve">
    <value>View audit log</value>
    <comment>Allows for viewing of audit logs</comment>
  </data>
  <data name="VIEW_CHANNEL" xml:space="preserve">
    <value>View channels</value>
    <comment>Allows guild members to view a channel, which includes reading messages in text channels</comment>
  </data>
</root>