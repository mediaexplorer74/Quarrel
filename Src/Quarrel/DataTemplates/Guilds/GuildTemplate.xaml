<ResourceDictionary
    x:Class="Quarrel.DataTemplates.Guilds.GuildTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Quarrel.DataTemplates.Guilds"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Quarrel.Controls"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:guildbindables="using:Quarrel.ViewModels.Models.Bindables.Guilds"
    xmlns:triggers="using:Quarrel.StateTriggers"
    xmlns:baseconvert="using:Quarrel.Converters.Base"
    xmlns:channelconvert="using:Quarrel.Converters.Channel"
    xmlns:guildconvert="using:Quarrel.Converters.Guild"
    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="GuildTemplate" x:DataType="guildbindables:BindableGuild">
        <UserControl Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(IsCollapsed), Mode=OneWay}">
            <!--Flyout-->
            <UserControl.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <MenuFlyoutItem x:Uid="/DataTemplates/MarkAsReadMFI" Icon="View" Text="Mark as read" Margin="-24,0,0,0"
                                    IsEnabled="{x:Bind IsUnread, Mode=OneWay}" Command="{x:Bind MarkAsRead}"/>
                    <ToggleMenuFlyoutItem x:Uid="/DataTemplates/MuteMFI" Text="Mute" Style="{StaticResource GuildToggleButtonFlyoutItemStyle}"
                                          IsChecked="{x:Bind IsMuted, Mode=OneWay}" Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(IsDM), Mode=OneWay}" Command="{x:Bind MuteGuildCommand, Mode=OneWay}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="/DataTemplates/GuildSettingsMFI" Icon="Setting" Text="Server Settings" Margin="-24,0,0,0"
                                    Command="{x:Bind OpenGuildSettings, Mode=OneWay}"/>
                    <MenuFlyoutSeparator Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(IsOwner), Mode=OneWay}"/>
                    <MenuFlyoutItem x:Uid="/DataTemplates/LeaveServerMFI" Icon="Cancel" Text="Leave Server" Margin="-24,0,0,0" Foreground="{ThemeResource dnd}"
                                    Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(IsOwner), Mode=OneWay}"
                                    Command="{x:Bind LeaveGuild, Mode=OneWay}"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Icon="Copy" Text="Copy Id" Margin="-24,0,0,0"
                                    Command="{x:Bind CopyId, Mode=OneWay}"/>
                </MenuFlyout>
            </UserControl.ContextFlyout>

            <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Padding="12,4" Margin="-12,0" Height="58" Width="80">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="Selection">
                        <VisualState x:Name="Normal">
                            <VisualState.StateTriggers>
                                <triggers:BooleanStateTrigger triggers:BooleanStateTrigger.DataValue="{x:Bind Selected, Mode=OneWay}"
                                                              triggers:BooleanStateTrigger.TriggerValue="False"/>
                            </VisualState.StateTriggers>
                            <VisualState.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="IndicScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.2" To="0">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </VisualState.Storyboard>
                        </VisualState>
                        <VisualState x:Name="Selected">
                            <VisualState.StateTriggers>
                                <triggers:BooleanStateTrigger triggers:BooleanStateTrigger.DataValue="{x:Bind Selected, Mode=OneWay}"
                                                              triggers:BooleanStateTrigger.TriggerValue="True"/>
                            </VisualState.StateTriggers>
                            <VisualState.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="IndicScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.2" To="1">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseIn"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </VisualState.Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                
                <!--Selected Highlight-->
                <Grid.Background>
                    <SolidColorBrush Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}" Color="{ThemeResource SystemAccentColor}"/>
                </Grid.Background>

                <!--Folder-->
                <Border x:Name="FolderIndicator" Visibility="{x:Bind baseconvert:NotNullToVisibilityConverter.ConvertString(FolderId), Mode=OneWay, FallbackValue=Collapsed}" VerticalAlignment="Stretch" Width="2" Opacity="0.25" Background="{ThemeResource SystemAccentColor}" Margin="-6,-4,0,-4" HorizontalAlignment="Left"/>

                <!--Unread-->
                <Border x:Name="UnreadIndicator" Visibility="{x:Bind ShowUnread, Mode=OneWay}" Height="12" Width="2" Opacity="0.75" Background="{ThemeResource Foreground}" Margin="-6,2,4,0" HorizontalAlignment="Left"/>

                <!--Icon-->
                <Rectangle Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(IsDM), Mode=OneWay}" x:Name="GuildImageBackdrop" Width="50" Height="50" RadiusX="25" RadiusY="25" Fill="{ThemeResource Foreground}" Opacity="0.1"/>
                <Border x:Name="GuildImage" CornerRadius="25" Width="50" Height="50" Visibility="{x:Bind HasIcon, Mode=OneWay}" Opacity="{x:Bind guildconvert:MutedToOpacityConverter.Convert(ShowMute), Mode=OneWay}">
                    <animations:Implicit.Animations>
                        <animations:OpacityAnimation Duration="0:0:0.3"/>
                    </animations:Implicit.Animations>
                    <toolkit:ImageEx Width="50" DecodePixelWidth="50" Source="{x:Bind IconUrl, Mode=OneWay}"/>
                </Border>
                <TextBlock x:Name="InvalidOverlay" Visibility="Collapsed" Text="" FontFamily="Segoe MDL2 Assets" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                <!--Text Icon placeholder-->
                <TextBlock Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(HasIcon), Mode=OneWay}" Foreground="{ThemeResource Foreground}" 
                   Text="{x:Bind DisplayText, Mode=OneWay}" FontFamily="{x:Bind guildconvert:IsDMToFontFamilyConverter.Convert(IsDM), Mode=OneWay}"
                   HorizontalAlignment="Center" VerticalAlignment="Center" 
                   FontSize="24" FontWeight="Light" Margin="0,-2,0,0"/>

                <!--Notificiation Count-->
                <Border x:Name="border" Visibility="{x:Bind baseconvert:PositiveIntToVisibilityConverter.Convert(NotificationCount), Mode=OneWay}" Margin="0,0,-12,0" VerticalAlignment="Bottom">
                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.3" To="1"/>
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.3" To="0"/>
                    </animations:Implicit.HideAnimations>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
                            <GradientStop Offset="0.9" Color="#00000000"/>
                            <GradientStop Color="{ThemeResource SystemAccentColor}" Offset="0"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <TextBlock x:Name="NotificationCounter" Text="{x:Bind NotificationCount, Mode=OneWay}" Foreground="White" FontWeight="SemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4,0,4,2" FontSize="15" RenderTransformOrigin="0.5,0.5">
                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.3" From="24" To="0"/>
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.3" From="0" To="24"/>
                    </animations:Implicit.HideAnimations>
                    </TextBlock>
                </Border>

                <!--Mute Icon-->
                <SymbolIcon Visibility="{x:Bind ShowMute, Mode=OneWay}" Canvas.ZIndex="20" Symbol="Mute" Foreground="{ThemeResource Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,2,0,0">
                    <animations:Implicit.ShowAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.3" From="0" To="1"/>
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:OpacityAnimation Duration="0:0:0.3" From="1" To="0"/>
                    </animations:Implicit.HideAnimations>
                </SymbolIcon>

                <Border x:Name="Indic" Opacity="0" Background="{ThemeResource Foreground}" Width="2" HorizontalAlignment="Left" Margin="-12,-6">
                    <Border.RenderTransform>
                        <ScaleTransform x:Name="IndicScale" CenterY="32" ScaleY="0"/>
                    </Border.RenderTransform>
                </Border>
            </Grid>
        </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="GuildFolderTemplate" x:DataType="guildbindables:BindableGuildFolder">
        <UserControl>
            <Grid Height="50" Width="50" HorizontalAlignment="Center" Padding="0,4" Margin="5,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="FolderIndicator" VerticalAlignment="Stretch" Width="2" Opacity="0.25" Background="{ThemeResource SystemAccentColor}" Margin="-11.5,-4,0,-18" HorizontalAlignment="Left"/>
                <Viewbox Margin="0,2">
                    <TextBlock Text="{x:Bind Model.Name, Mode=OneWay}" FontSize="36"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Viewbox>
                <controls:CollapseChveron IsCollapsed="{x:Bind IsCollapsed, Mode=OneWay}"
                                          CollapsedRotation="0" UncollapsedRotation="-180"
                                          Grid.Row="1" HorizontalAlignment="Center"/>
            </Grid>
        </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="EmptyGuildFolderTemplate" x:DataType="guildbindables:BindableGuildFolder">
        <Grid/>
    </DataTemplate>
</ResourceDictionary>
