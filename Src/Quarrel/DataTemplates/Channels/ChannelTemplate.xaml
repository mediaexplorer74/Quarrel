<ResourceDictionary
    x:Class="Quarrel.DataTemplates.Channels.ChannelTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tkcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Quarrel.Controls"
    xmlns:channelcontrols="using:Quarrel.Controls.Channels"
    xmlns:baseconvert="using:Quarrel.Converters.Base"
    xmlns:channelconvert="using:Quarrel.Converters.Channel"
    xmlns:discordconvert="using:Quarrel.Converters.Discord"
    xmlns:channelbindables="using:Quarrel.ViewModels.Models.Bindables.Channels"
    xmlns:behaviors="using:Quarrel.Xaml.Behaviors"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="VoiceUserListItem" TargetType="ListViewItem" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="false"/>
        <Setter Property="FocusVisualPrimaryBrush" Value="{ThemeResource SystemControlBackgroundAccentBrush}"/>
        <Setter Property="FocusVisualPrimaryThickness" Value="1"/>
        <Setter Property="FocusVisualSecondaryThickness" Value="0"/>
        <Setter Property="FocusVisualMargin" Value="-24,0,-24,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid x:Name="ContentBorder"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="focusGlow" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="1">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X" Duration="0:0:0.2" To="2">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focusGlow" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="focusGlow" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="focusGlow" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="Visible" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bgSelectedIndic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOverSelected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bgSelectedIndic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1" To="0.1">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PressedSelected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Duration="0:0:0"
                                                         To="1"/>
                                        <DoubleAnimation Storyboard.TargetName="bgSelectedIndic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetName="Indic" Storyboard.TargetProperty="Opacity" Duration="0:0:0.2" To="0">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <!--<VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>-->
                            <!--
                                    <VisualStateGroup x:Name="MultiSelectStates">
                                        <VisualState x:Name="MultiSelectDisabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MultiSelectEnabled">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                                                Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                                               Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                                               Storyboard.TargetProperty="X">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable"/>
                                        <VisualState x:Name="DataPlaceholder">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>-->
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DragStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NotDragging" />
                                <VisualState x:Name="Dragging">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                        <DragItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggingTarget">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingPrimary">
                                    <Storyboard>
                                        <!-- These two Opacity animations are required - the FadeInThemeAnimations
                                         on the same elements animate an internal Opacity. -->
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayBackground"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="1" />
                                        <DoubleAnimation Storyboard.TargetName="MultiArrangeOverlayText"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="1" />
                                        <DoubleAnimation Storyboard.TargetName="ContentBorder"
                                 Storyboard.TargetProperty="Opacity"
                                 Duration="0"
                                 To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
                                        <FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
                                        <DragItemThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MultipleDraggingSecondary">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="DraggedPlaceholder">
                                    <Storyboard>
                                        <FadeOutThemeAnimation TargetName="ContentBorder" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="BorderBackground"
                    IsHitTestVisible="False"
                    Opacity="0"
                    Control.IsTemplateFocusTarget="True"/>
                        <Rectangle x:Name="bgSelectedIndic" Fill="{ThemeResource SystemAccentColor}" Opacity="0" IsHitTestVisible="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <Border x:Name="Indic" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource Foreground}" Opacity="0" CornerRadius="0"/>

                        <Grid x:Name="ContentPresenterGrid"
              Background="Transparent"
              Margin="0,0,0,0">
                            <Grid.RenderTransform>
                                <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                            </Grid.RenderTransform>
                            <ContentPresenter x:Name="ContentPresenter"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Content="{TemplateBinding Content}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}" Control.IsTemplateFocusTarget="True"/>
                        </Grid>

                        <tkcontrols:DropShadowPanel x:Name="focusGlow" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Visibility="Collapsed" Opacity="0" Margin="0,0,0,0"  OffsetX="0" OffsetY="0" BlurRadius="10" Color="{ThemeResource SystemAccentColor}">
                            <Rectangle Width="2" Fill="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                        </tkcontrols:DropShadowPanel>
                        <!-- The 'Xg' text simulates the amount of space one line of text will occupy.
                          In the DataPlaceholder state, the Content is not loaded yet so we
                          approximate the size of the item using placeholder text. -->
                        <!--
                                <TextBlock x:Name="PlaceholderTextBlock"
                    Opacity="0"
                    Text="Xg"
                    Foreground="{x:Null}"
                    Margin="{TemplateBinding Padding}"
                                           Visibility="Collapsed"
                    IsHitTestVisible="False"
                    AutomationProperties.AccessibilityView="Raw"/>
                                <Rectangle x:Name="PlaceholderRect"
                    Visibility="Collapsed"
                    Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"/>-->
                        <Rectangle x:Name="MultiArrangeOverlayBackground"
                                           Visibility="Collapsed"
                    IsHitTestVisible="False"
                    Opacity="0"
                    Grid.ColumnSpan="2"/>
                        <Border x:Name="MultiSelectSquare"
                BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                BorderThickness="2"
                Width="20"
                Height="20"
                Margin="12,0,0,0"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Visibility="Collapsed" >
                            <Border.Clip>
                                <RectangleGeometry Rect="0,0,20,20">
                                    <RectangleGeometry.Transform>
                                        <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                    </RectangleGeometry.Transform>
                                </RectangleGeometry>
                            </Border.Clip>
                            <Border.RenderTransform>
                                <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                            </Border.RenderTransform>
                            <FontIcon x:Name="MultiSelectCheck"
                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                    Glyph="&#xE73E;"
                    FontSize="16"
                    Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
                    Visibility="Collapsed"
                    Opacity="0"/>
                        </Border>
                        <TextBlock x:Name="MultiArrangeOverlayText" Visibility="Collapsed"
                    Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
                    FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                    FontSize="26.667"
                    IsHitTestVisible="False"
                    Opacity="0"
                    TextWrapping="Wrap"
                    TextTrimming="WordEllipsis"
                    Margin="18,9,0,0"
                    AutomationProperties.AccessibilityView="Raw"
                    Grid.ColumnSpan="2"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TextChannelTemplate" x:DataType="channelbindables:BindableChannel">
        <Grid Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Hidden), Mode=OneWay}"
              Height="40"
              Padding="22,0,24,0">
            <!--Flyout-->
            <Grid.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <MenuFlyoutItem x:Uid="/DataTemplates/MarkAsReadMFI" Text="Mark as read" IsEnabled="{x:Bind IsUnread, Mode=OneWay}" Command="{x:Bind MarkAsRead, Mode=OneWay}"/>
                    <ToggleMenuFlyoutItem x:Uid="/DataTemplates/MuteMFI" Text="Mute" IsChecked="{x:Bind Muted, Mode=OneWay}" Command="{x:Bind Mute, Mode=OneWay}"/>
                    <!--<MenuFlyoutItem Text="Channel Settings"/>-->
                    <MenuFlyoutSubItem x:Uid="/DataTemplates/NotificationsMFI" Text="Notifications" IsEnabled="False"/>
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Text="Copy Id" Command="{x:Bind CopyId, Mode=OneWay}"/>
                </MenuFlyout>
            </Grid.ContextFlyout>
            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColor}" Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto" MaxHeight="300"/>
                <RowDefinition Height="Auto" MaxHeight="10"/>
            </Grid.RowDefinitions>

            <!--Unread Indicator-->
            <Border x:Name="UnreadIndicator" Visibility="{x:Bind ShowUnread, Mode=OneWay}" Height="24" Width="2" Background="{ThemeResource Foreground}" Margin="-22,0,4,0" HorizontalAlignment="Left" Opacity="0.75"/>

            <!--Mention Notifications and Glow-->
            <Grid x:Name="grid" x:Load="{x:Bind baseconvert:PositiveIntToBoolConverter.Convert(MentionCount), Mode=OneWay}" Grid.RowSpan="4" Grid.ColumnSpan="4" Margin="-22,0,-24,0"
                  BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" BorderThickness="2,0,0,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0,0" StartPoint="1.3,0" ColorInterpolationMode="ScRgbLinearInterpolation" SpreadMethod="Pad">
                        <GradientStop Offset="0.95" Color="#00000000"/>
                        <GradientStop Color="{ThemeResource SystemAccentColor}" Offset="0"/>
                    </LinearGradientBrush>
                </Grid.Background>

                <TextBlock x:Name="NotificationCounter" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Text="{x:Bind MentionCount, Mode=OneWay}" FontWeight="SemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="24,0,24,2" FontSize="15" RenderTransformOrigin="0.5,0.5"/>
            </Grid>

            <!--Main Details-->
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="0,0,-18,0">
                <TextBlock Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Permissions.ReadMessages)}" Text="" Opacity="{x:Bind TextOpacity, Mode=OneWay}" FontSize="14" Margin="-2,4,6,6" FontFamily="Segoe MDL2 Assets" />
                <SymbolIcon x:Name="MuteIcon" Visibility="{x:Bind Muted, Mode=OneWay}" Symbol="Mute" Margin="0,0,4,0" Opacity="0.35"/>
                <TextBlock Text="#" Opacity="{x:Bind TextOpacity, Mode=OneWay}" Foreground="{StaticResource Foreground}" FontSize="20" FontWeight="Light" Margin="0,-2,4,0"/>
                <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}" Opacity="{x:Bind TextOpacity, Mode=OneWay}" Margin="0,1,0,0"/>
            </StackPanel>

            <!--Typing-->
            <controls:TypingIndicator
                x:Name="TypingIndicator" 
                Grid.Column="2"
                x:Load="{x:Bind IsTyping, Mode=OneWay}"
                HorizontalAlignment="Right"
                Margin="6,0" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="VoiceChannelTemplate" x:DataType="channelbindables:BindableChannel">
        <Grid Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Hidden), Mode=OneWay}" MinHeight="40" Padding="22,0,24,0">
            <!--Flyout-->
            <Grid.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <!--<MenuFlyoutItem Text="Channel Settings"/>-->
                    <ToggleMenuFlyoutItem x:Uid="/DataTemplates/HideNamesMFI" Text="Hide names"
                                          IsEnabled="False" />
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Text="Copy Id"
                                    Command="{x:Bind CopyId, Mode=OneWay}" />
                </MenuFlyout>
            </Grid.ContextFlyout>
            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColor}" Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}"/>
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Main Details-->
            <StackPanel Grid.Column="1" VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="0,0,-18,0" Height="24">
                <TextBlock Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Permissions.ReadMessages)}" Text="" Opacity="{x:Bind TextOpacity, Mode=OneWay}" FontSize="14" Margin="-2,4,6,6" FontFamily="Segoe MDL2 Assets" />
                <TextBlock Text="" Opacity="{x:Bind TextOpacity, Mode=OneWay}" FontSize="14" Margin="-2,4,6,6" FontFamily="Segoe MDL2 Assets" />
                <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}" Opacity="{x:Bind TextOpacity, Mode=OneWay}" Margin="0,1,0,0"/>
            </StackPanel>

            <!--Voice Members-->
            <ListView x:Name="MemberList"
                      ItemsSource="{x:Bind ConnectedUsers.Values, Mode=OneWay}"
                      Margin="12,0,0,0"
                      x:Load="{x:Bind baseconvert:NotNullToBoolConverter.Convert(ConnectedUsers.Values), Mode=OneWay, FallbackValue=False}"
                      SelectionMode="None"
                      IsItemClickEnabled="True"
                      Grid.Row="1"
                      Grid.ColumnSpan="2"
                      ItemContainerStyle="{StaticResource VoiceUserListItem}">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="ItemClick">
                        <behaviors:OpenListViewItemFlyoutAction />
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <ListView.Template>
                    <ControlTemplate>
                        <ItemsPresenter/>
                    </ControlTemplate>
                </ListView.Template>
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="channelbindables:BindableVoiceUser">
                        <Grid VerticalAlignment="Top" Margin="6,6,6,6" FlyoutBase.AttachedFlyout="{StaticResource VoiceMemberFlyout}">
                            <Grid.Resources>
                                <Storyboard x:Name="Speaking">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="1"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="username">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Name="StopSpeaking">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="0.5"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="username">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseIn" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                                <Storyboard x:Name="ShowMute">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="0.5"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="Mute">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="Mute">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Name="HideMute">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="0"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="Mute">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="Mute">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Collapsed" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Name="ServerMute">
                                    <ColorAnimation Duration="0:0:0.2"
                                                    To="Red"
                                                    Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="Mute">
                                        <ColorAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseInOut" />
                                        </ColorAnimation.EasingFunction>
                                    </ColorAnimation>
                                </Storyboard>
                                <Storyboard x:Name="LocalMute">
                                    <ColorAnimation Duration="0:0:0.2"
                                                    To="White"
                                                    Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="Mute">
                                        <ColorAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseInOut" />
                                        </ColorAnimation.EasingFunction>
                                    </ColorAnimation>
                                </Storyboard>
                                <Storyboard x:Name="ShowDeaf">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="0.5"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="Deaf">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="Deaf">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Visible" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Name="HideDeaf">
                                    <DoubleAnimation Duration="0:0:0.2"
                                                     To="0"
                                                     Storyboard.TargetProperty="(UIElement.Opacity)"
                                                     Storyboard.TargetName="Deaf">
                                        <DoubleAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                    <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.2"
                                                                   Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                   Storyboard.TargetName="Deaf">
                                        <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="Collapsed" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Name="ServerDeaf">
                                    <ColorAnimation Duration="0:0:0.2"
                                                    To="Red"
                                                    Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="Deaf">
                                        <ColorAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseInOut" />
                                        </ColorAnimation.EasingFunction>
                                    </ColorAnimation>
                                </Storyboard>
                                <Storyboard x:Name="LocalDeaf">
                                    <ColorAnimation Duration="0:0:0.2"
                                                    To="White"
                                                    Storyboard.TargetProperty="(UIElement.Foreground).(SolidColorBrush.Color)"
                                                    Storyboard.TargetName="Deaf">
                                        <ColorAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseInOut" />
                                        </ColorAnimation.EasingFunction>
                                    </ColorAnimation>
                                </Storyboard>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <!--Avater-->
                            <controls:UserIconControl DataContext="{x:Bind GuildMember}" Size="24" ShowPresence="False"/>

                            <!--Username-->
                            <TextBlock x:Name="username"
                                       Text="{x:Bind GuildMember.DisplayName, Mode=OneWay}"
                                       Margin="8,0,0,0"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       FontSize="13.333"
                                       FontWeight="SemiLight"
                                       Opacity="0.5"
                                       TextTrimming="CharacterEllipsis" />
                            
                            <!--Status icons-->
                            <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right">
                                <FontIcon x:Name="Mute" Glyph="&#xEC54;" FontFamily="Segoe MDL2 Assets" FontSize="16" Margin="0,0,8,0" Opacity="0" Visibility="Collapsed"/>
                                <FontIcon x:Name="Deaf" Glyph="&#xE74F;" FontFamily="Segoe MDL2 Assets" FontSize="16" Opacity="0"/>
                            </StackPanel>
                            
                            <!--Animations-->
                            <interactivity:Interaction.Behaviors>
                                <!--Deaf changed-->
                                <core:DataTriggerBehavior Binding="{x:Bind ShowDeaf, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource ShowDeaf}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <core:DataTriggerBehavior Binding="{x:Bind ShowDeaf, Mode=OneWay}" Value="False">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource HideDeaf}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <!--Server vs Local deaf-->
                                <core:DataTriggerBehavior Binding="{x:Bind ServerDeaf, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource ServerDeaf}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <core:DataTriggerBehavior Binding="{x:Bind LocalDeaf, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource LocalDeaf}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>

                                <!--Mute changed-->
                                <core:DataTriggerBehavior Binding="{x:Bind ShowMute, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource ShowMute}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <core:DataTriggerBehavior Binding="{x:Bind ShowMute, Mode=OneWay}" Value="False">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource HideMute}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                
                                <!--Server vs Local mute-->
                                <core:DataTriggerBehavior Binding="{x:Bind ServerMute, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource ServerMute}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <core:DataTriggerBehavior Binding="{x:Bind LocalMute, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource LocalMute}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                
                                <!--Speaking changed-->
                                <core:DataTriggerBehavior Binding="{x:Bind Speaking, Mode=OneWay}" Value="True">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource Speaking}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                                <core:DataTriggerBehavior Binding="{x:Bind Speaking, Mode=OneWay}" Value="False">
                                    <media:ControlStoryboardAction Storyboard="{StaticResource StopSpeaking}" ControlStoryboardOption="Play"/>
                                </core:DataTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DMChannelTemplate" x:DataType="channelbindables:BindableChannel">
        <Grid Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Hidden), Mode=OneWay}"
              Padding="22,0,24,0"
              Height="48">
            <!--Flyout-->
            <Grid.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <MenuFlyoutItem x:Uid="/DataTemplates/ProfileMFI" Text="Profile"
                                    Command="{x:Bind OpenProfile, Mode=OneWay}" />
                    <MenuFlyoutItem x:Uid="/DataTemplates/MarkAsReadMFI" Text="Mark as read"
                                    IsEnabled="{x:Bind IsUnread, Mode=OneWay}"
                                    Command="{x:Bind MarkAsRead, Mode=OneWay}" />
                    <ToggleMenuFlyoutItem x:Uid="/DataTemplates/MuteMFI" Text="Mute"
                                          IsChecked="{x:Bind Muted, Mode=OneWay}"
                                          Command="{x:Bind Mute, Mode=OneWay}" />
                    <MenuFlyoutItem x:Uid="/DataTemplates/CloseDMMFI" Text="Close DM"
                                    Foreground="{ThemeResource dnd}"
                                    Command="{x:Bind LeaveGroup, Mode=OneWay}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Text="Copy Id"
                                    Command="{x:Bind CopyId, Mode=OneWay}" />
                </MenuFlyout>
            </Grid.ContextFlyout>

            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColor}"
                                 Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"
                               MaxHeight="300" />
                <RowDefinition Height="Auto"
                               MaxHeight="10" />
            </Grid.RowDefinitions>

            <!--Unread Indicator-->
            <Border x:Name="UnreadIndicator"
                    Visibility="{x:Bind ShowUnread, Mode=OneWay}"
                    Height="24"
                    Width="2"
                    Background="{ThemeResource Foreground}"
                    Margin="-22,0,4,0"
                    HorizontalAlignment="Left"
                    Opacity="0.75" />

            <!--Mention Notifications and Glow-->
            <Grid x:Name="grid"
                  x:Load="{x:Bind baseconvert:PositiveIntToBoolConverter.Convert(MentionCount), Mode=OneWay}"
                  Grid.RowSpan="4"
                  Grid.ColumnSpan="4"
                  Margin="0,0,-24,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0,0"
                                         StartPoint="1.3,0"
                                         ColorInterpolationMode="ScRgbLinearInterpolation"
                                         SpreadMethod="Pad">
                        <GradientStop Offset="0.95"
                                      Color="#00000000" />
                        <GradientStop Color="{ThemeResource SystemAccentColor}"
                                      Offset="0" />
                    </LinearGradientBrush>
                </Grid.Background>
                <Border Visibility="Visible"
                        Height="24"
                        Width="2"
                        Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                        Margin="-22,0,4,0"
                        HorizontalAlignment="Left"
                        Opacity="1" />

                <TextBlock x:Name="NotificationCounter"
                           Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                           Text="{x:Bind MentionCount, Mode=OneWay}"
                           FontWeight="SemiBold"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="24,0,24,2"
                           FontSize="15"
                           RenderTransformOrigin="0.5,0.5">
                                <!--<TextBlock.RenderTransform>
                                    <CompositeTransform TranslateX="24"/>
                                </TextBlock.RenderTransform>-->
                </TextBlock>
            </Grid>

            <Rectangle Visibility="{x:Bind ShowIconBackdrop, Mode=OneWay}"
                       Fill="{x:Bind discordconvert:DiscriminatorToBrushConverter.Convert(FirstUserDiscriminator), Mode=OneWay}"
                       x:Name="ChannelImageBackdrop"
                       Width="36"
                       Height="36"
                       Margin="0,6,6,6"
                       RadiusX="18"
                       RadiusY="18"
                       Opacity="1" />
            <Border Margin="0,6,6,6"
                    CornerRadius="18">
                <Image Source="{x:Bind ImageUrl, Mode=OneWay}"
                       Width="36"
                       Height="36" />
            </Border>

            <!--Main Details-->
            <StackPanel Grid.Column="1"
                        VerticalAlignment="Center"
                        Margin="0,6"
                        Padding="0,0,-18,0">
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <SymbolIcon x:Name="MuteIcon"
                                Visibility="{x:Bind Muted, Mode=OneWay}"
                                Symbol="Mute"
                                Margin="0,0,4,0"
                                Opacity="0.35" />
                    <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}"
                               Opacity="{x:Bind TextOpacity, Mode=OneWay}"
                               Margin="0,1,0,0" />
                </StackPanel>
                <TextBlock x:Name="SubTitle"
                           Visibility="Collapsed"
                           Text=""
                           FontSize="11"
                           FontWeight="SemiBold"
                           Opacity="0.4" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock Visibility="Collapsed"
                               x:Name="playing"
                               Text="Playing"
                               VerticalAlignment="Center"
                               FontSize="11"
                               FontWeight="SemiLight"
                               Opacity="0.4"
                               Foreground="{ThemeResource Foreground}"
                               Margin="0,0,3,0" />
                    <TextBlock Visibility="Collapsed"
                               x:Name="game"
                               VerticalAlignment="Center"
                               Opacity="0.8"
                               FontSize="11"
                               FontWeight="Normal"
                               Foreground="{ThemeResource Foreground}"
                               Margin="0,0,0,0" />
                    <FontIcon Visibility="Collapsed"
                              x:Name="rich"
                              Glyph=""
                              FontSize="11"
                              Margin="4,0,0,-2"
                              Foreground="{ThemeResource Foreground}" />
                </StackPanel>
            </StackPanel>

            <!--Typing-->
            <controls:TypingIndicator x:Name="TypingIndicator"
                                      Grid.Column="2"
                                      x:Load="{x:Bind IsTyping, Mode=OneWay}"
                                      HorizontalAlignment="Right"
                                      Margin="6,0" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupDMChannelTemplate" x:DataType="channelbindables:BindableChannel">
        <Grid Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Hidden), Mode=OneWay}"
              Height="48"
              Padding="22,0,24,0">
            <!--Flyout-->
            <Grid.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <MenuFlyoutItem x:Uid="/DataTemplates/MarkAsReadMFI" Text="Mark as read"
                                    IsEnabled="{x:Bind IsUnread, Mode=OneWay}"
                                    Command="{x:Bind MarkAsRead, Mode=OneWay}" />
                    <ToggleMenuFlyoutItem x:Uid="/DataTemplates/MuteMFI" Text="Mute"
                                          IsChecked="{x:Bind Muted, Mode=OneWay}"
                                          Command="{x:Bind Mute, Mode=OneWay}" />
                    <MenuFlyoutItem x:Uid="/DataTemplates/LeaveGroupMFI" Text="Leave Group"
                                    Foreground="{ThemeResource dnd}"
                                    Command="{x:Bind LeaveGroup, Mode=OneWay}" />
                    <MenuFlyoutSeparator />
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Text="Copy Id"
                                    Command="{x:Bind CopyId, Mode=OneWay}" />
                </MenuFlyout>
            </Grid.ContextFlyout>

            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource SystemAccentColor}"
                                 Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto"
                               MaxHeight="300" />
                <RowDefinition Height="Auto"
                               MaxHeight="10" />
            </Grid.RowDefinitions>

            <!--Unread Indicator-->
            <Border x:Name="UnreadIndicator"
                    Visibility="{x:Bind ShowUnread, Mode=OneWay}"
                    Height="24"
                    Width="2"
                    Background="{ThemeResource Foreground}"
                    Margin="-22,0,4,0"
                    HorizontalAlignment="Left"
                    Opacity="0.75" />

            <!--Mention Notifications and Glow-->
            <Grid x:Name="grid"
                  x:Load="{x:Bind baseconvert:PositiveIntToBoolConverter.Convert(MentionCount), Mode=OneWay}"
                  Grid.RowSpan="4"
                  Grid.ColumnSpan="4"
                  Margin="0,0,-24,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0,0"
                                         StartPoint="1.3,0"
                                         ColorInterpolationMode="ScRgbLinearInterpolation"
                                         SpreadMethod="Pad">
                        <GradientStop Offset="0.95"
                                      Color="#00000000" />
                        <GradientStop Color="{ThemeResource SystemAccentColor}"
                                      Offset="0" />
                    </LinearGradientBrush>
                </Grid.Background>
                <Border Visibility="Visible"
                        Height="24"
                        Width="2"
                        Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                        Margin="-22,0,4,0"
                        HorizontalAlignment="Left"
                        Opacity="1" />

                <TextBlock x:Name="NotificationCounter"
                           Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                           Text="{x:Bind MentionCount, Mode=OneWay}"
                           FontWeight="SemiBold"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="24,0,24,2"
                           FontSize="15"
                           RenderTransformOrigin="0.5,0.5">
                                <!--<TextBlock.RenderTransform>
                                    <CompositeTransform TranslateX="24"/>
                                </TextBlock.RenderTransform>-->
                </TextBlock>
            </Grid>

            <!--Icon-->
            <Rectangle Visibility="{x:Bind ShowIconBackdrop, Mode=OneWay}"
                       Fill="{x:Bind discordconvert:DiscriminatorToBrushConverter.Convert(FirstUserDiscriminator), Mode=OneWay}"
                       x:Name="ChannelImageBackdrop"
                       Width="36"
                       Height="36"
                       Margin="0,6,6,6"
                       RadiusX="18"
                       RadiusY="18"
                       Opacity="1" />
            <Border Margin="0,6,6,6"
                    CornerRadius="18">
                <Image Source="{x:Bind ImageUrl, Mode=OneWay}"
                       Width="36"
                       Height="36" />
            </Border>

            <!--Main Details-->
            <StackPanel Grid.Column="1"
                        VerticalAlignment="Center"
                        Margin="0,6"
                        Padding="0,0,-18,0">
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <SymbolIcon x:Name="MuteIcon"
                                x:Load="{x:Bind Muted, Mode=OneWay}"
                                Symbol="Mute"
                                Margin="0,0,4,0"
                                Opacity="0.35" />
                    <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}"
                               Opacity="{x:Bind TextOpacity, Mode=OneWay}"
                               Margin="0,1,0,0" />
                </StackPanel>
                <TextBlock x:Name="SubTitle"
                           Visibility="Collapsed"
                           Text=""
                           FontSize="11"
                           FontWeight="SemiBold"
                           Opacity="0.4" />
                <StackPanel Orientation="Horizontal">
                    <TextBlock Visibility="Collapsed"
                               x:Name="playing"
                               Text="Playing"
                               VerticalAlignment="Center"
                               FontSize="11"
                               FontWeight="SemiLight"
                               Opacity="0.4"
                               Foreground="{ThemeResource Foreground}"
                               Margin="0,0,3,0" />
                    <TextBlock Visibility="Collapsed"
                               x:Name="game"
                               VerticalAlignment="Center"
                               Opacity="0.8"
                               FontSize="11"
                               FontWeight="Normal"
                               Foreground="{ThemeResource Foreground}"
                               Margin="0,0,0,0" />
                    <FontIcon Visibility="Collapsed"
                              x:Name="rich"
                              Glyph=""
                              FontSize="11"
                              Margin="4,0,0,-2"
                              Foreground="{ThemeResource Foreground}" />
                </StackPanel>
            </StackPanel>

            <!--Typing-->
            <controls:TypingIndicator x:Name="TypingIndicator"
                                      Grid.Column="2"
                                      x:Load="{x:Bind IsTyping, Mode=OneWay}"
                                      HorizontalAlignment="Right"
                                      Margin="6,0" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CategoryTemplate" x:DataType="channelbindables:BindableChannel">
        <Grid Visibility="{x:Bind baseconvert:NotBoolToVisibilityConverter.Convert(Hidden), Mode=OneWay}" Height="48">
            <Grid.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <!--<MenuFlyoutItem Text="Mark as read" IsEnabled="{x:Bind IsUnread, Mode=OneWay}" Command="{x:Bind MarkAsRead, Mode=OneWay}"/>-->
                    <!--<ToggleMenuFlyoutItem Text="Mute" IsChecked="{x:Bind Muted, Mode=OneWay}" Command="{x:Bind Mute, Mode=OneWay}"/>-->
                    <!--<MenuFlyoutItem Text="Category Settings"/>-->
                    <!--<MenuFlyoutSeparator/>-->
                    <MenuFlyoutItem x:Uid="/DataTemplates/CopyIdMFI" Text="Copy Id"
                                    Command="{x:Bind CopyId, Mode=OneWay}" />
                </MenuFlyout>
            </Grid.ContextFlyout>
            <Rectangle x:Name="HoverCache"
                       Fill="{ThemeResource AcrylicChannelPaneBackground}"
                       Opacity="0.4"/>
            <StackPanel Orientation="Horizontal"
                        Padding="22,0,24,0"
                        Height="48">
                <!--Flyout-->
                <StackPanel.Background>
                    <SolidColorBrush Color="{ThemeResource SystemAccentColor}"
                                     Opacity="{x:Bind channelconvert:SelectedToOpacityConverter.Convert(Selected), Mode=OneWay}" />
                </StackPanel.Background>

                <TextBlock x:Name="TextBlock"
                           x:Load="{x:Bind baseconvert:NotBoolToBoolConverter.Convert(Permissions.ReadMessages)}"
                           Text=""
                           Opacity="{x:Bind TextOpacity, Mode=OneWay}"
                           FontSize="14"
                           Margin="-2,0,6,0"
                           VerticalAlignment="Center"
                           FontFamily="Segoe MDL2 Assets" />
                <controls:CollapseChveron IsCollapsed="{x:Bind Collapsed, Mode=OneWay}"
                                          Grid.Column="2"
                                          HorizontalAlignment="Left"
                                          Grid.ColumnSpan="4"
                                          Margin="0,0,12,0"
                                          VerticalAlignment="Center" />
                <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}"
                           Opacity="{x:Bind TextOpacity, Mode=OneWay}"
                           Foreground="{ThemeResource SystemAccentColor}"
                           VerticalAlignment="Center"
                           Margin="0,1,0,0" />
            </StackPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
