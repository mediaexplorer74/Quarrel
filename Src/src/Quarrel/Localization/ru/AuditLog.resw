<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bitrateChange" xml:space="preserve">
    <value>Изменён битрейт с &lt;old&gt; до &lt;new&gt;</value>
  </data>
  <data name="bitrateSet" xml:space="preserve">
    <value>Битрейт установлен на &lt;new&gt;</value>
  </data>
  <data name="ChannelCreate" xml:space="preserve">
    <value>&lt;user&gt; создал канал &lt;channel&gt;</value>
  </data>
  <data name="ChannelDelete" xml:space="preserve">
    <value>&lt;user&gt; удалил канал &lt;channel&gt;</value>
  </data>
  <data name="ChannelOverwriteCreate" xml:space="preserve">
    <value>&lt;user&gt; добавил разрешения для канала &lt;channel&gt;</value>
  </data>
  <data name="ChannelOverwriteDelete" xml:space="preserve">
    <value>&lt;user&gt; удалил разрешения для канала &lt;channel&gt;</value>
  </data>
  <data name="ChannelOverwriteUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил разрешения для канала &lt;channel&gt;</value>
  </data>
  <data name="ChannelUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил канал &lt;channel&gt;</value>
  </data>
  <data name="channel_idChange" xml:space="preserve">
    <value>Инвайт &lt;new&gt;</value>
  </data>
  <data name="channel_idSet" xml:space="preserve">
    <value>Инвайт &lt;new&gt;</value>
  </data>
  <data name="codeChange" xml:space="preserve">
    <value>С кодом &lt;new&gt;</value>
  </data>
  <data name="codeSet" xml:space="preserve">
    <value>С кодом &lt;new&gt;</value>
  </data>
  <data name="colorChange" xml:space="preserve">
    <value>Изменён цвет с &lt;old&gt; на &lt;new&gt;</value>
  </data>
  <data name="colorSet" xml:space="preserve">
    <value>Цвет установлен на &lt;new&gt;</value>
  </data>
  <data name="EmojiCreate" xml:space="preserve">
    <value>&lt;user&gt; добавляет эмодзи &lt;emoji&gt;</value>
  </data>
  <data name="EmojiDelete" xml:space="preserve">
    <value>&lt;user&gt; удаляет эмодзи &lt;emoji&gt;</value>
  </data>
  <data name="EmojiUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновляет эмодзи &lt;emoji&gt;</value>
  </data>
  <data name="GenericChange" xml:space="preserve">
    <value>Изменён &lt;property&gt; с &lt;old&gt; на &lt;new&gt;</value>
  </data>
  <data name="GenericSet" xml:space="preserve">
    <value>&lt;property&gt; установлен на &lt;new&gt;</value>
  </data>
  <data name="GuildUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновляет сервер</value>
  </data>
  <data name="InviteCreate" xml:space="preserve">
    <value>&lt;user&gt; создаёт приглашение &lt;invite&gt;</value>
  </data>
  <data name="InviteDelete" xml:space="preserve">
    <value>&lt;user&gt; удаляет приглашение &lt;invite&gt;</value>
  </data>
  <data name="InviteUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновляет приглашение &lt;invite&gt;</value>
  </data>
  <data name="max_age0" xml:space="preserve">
    <value>**Никогда** не истечёт</value>
  </data>
  <data name="max_ageChange" xml:space="preserve">
    <value>Истекает через &lt;new&gt;</value>
  </data>
  <data name="max_ageSet" xml:space="preserve">
    <value>Истекает через &lt;new&gt;</value>
  </data>
  <data name="max_uses0" xml:space="preserve">
    <value>**Безлимитные** использования</value>
  </data>
  <data name="max_uses1" xml:space="preserve">
    <value>1 использование</value>
  </data>
  <data name="max_usesChange" xml:space="preserve">
    <value>&lt;new&gt; использований</value>
  </data>
  <data name="max_usesSet" xml:space="preserve">
    <value>&lt;new&gt; использований</value>
  </data>
  <data name="MemberBanAdd" xml:space="preserve">
    <value>&lt;user&gt; забанил &lt;recipient&gt;</value>
  </data>
  <data name="MemberBanRemove" xml:space="preserve">
    <value>&lt;user&gt; удалил бан для &lt;recipient&gt;</value>
  </data>
  <data name="MemberKick" xml:space="preserve">
    <value>&lt;user&gt; выгнал &lt;recipient&gt;</value>
  </data>
  <data name="MemberPrune" xml:space="preserve">
    <value>&lt;user&gt; сократил сервер</value>
  </data>
  <data name="MemberRoleUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил роли для &lt;recipient&gt;</value>
  </data>
  <data name="MemberUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил &lt;recipient&gt;</value>
  </data>
  <data name="MessageDelete" xml:space="preserve">
    <value>&lt;user&gt; удалил сообщение от &lt;recipient&gt; в &lt;channel&gt;</value>
  </data>
  <data name="nameChange" xml:space="preserve">
    <value>Имя изменено с &lt;old&gt; на &lt;new&gt;</value>
  </data>
  <data name="nameSet" xml:space="preserve">
    <value>Имя установлено на &lt;new&gt;</value>
  </data>
  <data name="nsfwChange" xml:space="preserve">
    <value>Сделан канал &lt;new&gt;</value>
  </data>
  <data name="nsfwSet" xml:space="preserve">
    <value>Сделан канал &lt;new&gt;</value>
  </data>
  <data name="regionChange" xml:space="preserve">
    <value>Изменён регион с &lt;old&gt; на &lt;new&gt;</value>
  </data>
  <data name="regionSet" xml:space="preserve">
    <value>Регион установлен на &lt;new&gt;</value>
  </data>
  <data name="RoleCreate" xml:space="preserve">
    <value>&lt;user&gt; создал роль &lt;role&gt;</value>
  </data>
  <data name="RoleDelete" xml:space="preserve">
    <value>&lt;user&gt; удалил роль &lt;role&gt;</value>
  </data>
  <data name="RoleUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил роль &lt;role&gt;</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>&lt;user&gt; сделал неизвестное действие</value>
  </data>
  <data name="uses0" xml:space="preserve">
    <value>Не использовано</value>
  </data>
  <data name="uses1" xml:space="preserve">
    <value>Использовано **1** раз</value>
  </data>
  <data name="usesChange" xml:space="preserve">
    <value>Использовано &lt;new&gt; раз</value>
  </data>
  <data name="usesSet" xml:space="preserve">
    <value>Использовано &lt;new&gt; раз</value>
  </data>
  <data name="WebhookCreate" xml:space="preserve">
    <value>&lt;user&gt; создал вебхук &lt;webhook&gt;</value>
  </data>
  <data name="WebhookDelete" xml:space="preserve">
    <value>&lt;user&gt; удалил вебхук &lt;webhook&gt;</value>
  </data>
  <data name="WebhookUpdate" xml:space="preserve">
    <value>&lt;user&gt; обновил вебхук &lt;webhook&gt;</value>
  </data>
</root>